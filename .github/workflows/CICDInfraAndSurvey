name: CI/CD Infra and Survey Workflow

on:
  workflow_dispatch:  # Single declaration for manual trigger

env:
  AWS_REGION: us-west-2
  ECS_CLUSTER: Survey

jobs:
  build-and-deploy-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@latest

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@latest
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@latest

      - name: Build and Push Docker Images
        id: build-image
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t $ECR_REGISTRY/survey_backend:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/survey_backend:$IMAGE_TAG
          docker build --build-arg VITE_API_URL=${VITE_API_URL} -t $ECR_REGISTRY/survey_frontend:$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/survey_frontend:$IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV

  infrabuild-and-deploy2fargate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@latest
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@latest
        with:
          terraform_version: 1.10.1

      - name: Initialize Terraform
        working-directory: ./infra
        run: terraform init

      - name: Validate Terraform Configuration
        working-directory: ./infra
        run: terraform validate

      - name: Apply Terraform Configuration
        working-directory: ./infra
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve -var="image_tag=${{ env.image_tag }}"
