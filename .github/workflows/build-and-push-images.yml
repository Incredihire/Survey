name: Build and Deploy Docker Images to AWS ECR
on:
  push:
    branches:
      - main
  workflow_dispatch:  # This allows the workflow to be manually triggered

env:
  AWS_REGION: us-west-2
  ECS_CLUSTER: Survey

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Add outputs to make the image tag available to other workflows
    outputs:
      image_tag: ${{ steps.build-image.outputs.image_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0f069ddc17b8eb78586b08a7fe335fd54649e2d3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build and push Docker images
        id: build-image
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_BACKEND=survey_backend 
          ECR_REPOSITORY_FRONTEND=survey_frontend 
          IMAGE_TAG=${GITHUB_SHA::7}

          # Build and push backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG

          # Build and push frontend
          docker build --build-arg VITE_API_URL=${VITE_API_URL} -t $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG

          # Use the newer syntax for setting outputs
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      # Create an artifact with the commit SHA for the next workflow
      - name: Save commit SHA to artifact
        if: success()
        run: |
          echo "${{ steps.build-image.outputs.image_tag }}" > commit-sha.txt

      - name: Upload commit SHA artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: commit-sha
          path: commit-sha.txt
          retention-days: 1
